@using QIMSchoolPro.Thesis.Services.Models.Enum;
@using QIMSchoolPro.Thesis.Services.Models.ViewModels;
@model QIMSchoolPro.Thesis.Services.Models.ViewModels.ReportDetail




<div class="modal fade" id="Add_File" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <form id="frmUpload">
                <div class="modal-header">
                    <h5 class="modal-title changeModalName" id="exampleModalLabel">Upload Examiner's Report'</h5>
                    <div class="btn btn-sm btn-icon btn-active-color-primary" data-bs-dismiss="modal">
                        <i class="fa fa-times"><span class="path1"></span><span class="path2"></span></i>
                    </div>
                </div>
                <div class="modal-body">
                    <div class="container">
                        <input type="hidden" id="doc_id" value="@Model.Submission?.Documents?.Where(a=>a.Name=="PrimaryFile")?.FirstOrDefault()?.Id" />
                        <input type="file" id="fileId" class="form-control" />
                    </div>

                </div>
                <div class="modal-footer">
                    <div class="kt-portlet__foot">
                        <div class="kt-form__actions">
                            <input type="submit" class="btn btn-primary" value="Upload">
                        </div>
                    </div>
                </div>
            </form>

        </div>
    </div>
</div>

<div class="row" >
    
    <div class="col-xl-8" >

        <!--begin::Table Widget 5-->
        <div class="card card-flush">
           
            <div class="card-header pt-7">
                
                <div class="row">
                    <input type="hidden" id="submissionId" value="@Model.Submission.Id" />
                    @if ( User.IsInRole(RolesModel.SPS))
                    {

                        <div class="col-md-3">
                            @if (!Model.Submission.Publish && Model.Submission.DecisionState==DecisionState.Neutral)
                            {
                                <label>Select Action</label>
                                <select class="form-control form-select"  id="decide">
                                    <option></option>
                                    <option value="1">Pass</option>
                                    <option value="Re-assign">Re-assign</option>
                                    <option value="2">Reject</option>
                                </select>
                               
                            }
                        </div>
                        <div class="col-md-3">
                            <br>
                            <button type="button" id="btnApply" hidden class="btn btn-success btn-sm">
                                Apply
                            </button>
                        </div>
                        @if (Model.Submission.DecisionState==DecisionState.Approve || Model.Submission.DecisionState==DecisionState.Reject)
                        {
                            <div class="col-md-3">
                                <br>
                                <br>
                                @if (Model.Submission.Publish)
                                {
                                    <span class="badge badge-light-success fs-8 fw-bold my-2">published</span>
                                }
                                else
                                {

                                    <button type="button" id="btnPublish" class="btn btn-warning btn-sm">
                                        Publish
                                    </button>
                                }

                            </div>
                        }
                        @if (Model.Submission.Publish && Model.Submission.DecisionState == DecisionState.Approve && Model.Submission.Trip > 1)
                        {
                            <div class="col-md-3">
                                <br>
                                @if (Model.Submission.TransitionState == TransitionState.Library)
                                {
                                    <span class="badge badge-light-success fs-8 fw-bold my-2">submitted to library</span>
                                }
                                else
                                {
                                    <input type="hidden" id="submissionId" value="@Model.Submission.Id" />
                                    <a href="#" id="btnLibrary">send to library</a>
                                }
                                <br>
                                <br>
                                <a asp-action="Index" asp-controller="OralExamination" asp-route-id="@Model.Submission.Id">Schedule Oral Examination</a>

                               
                            </div>
                        }

                      
                    
                    }
                </div>
              
                    <div class="row" id="subsec" hidden>
                        <div class="col-md-3">
                            <label>Select Examiner</label>
                            @Html.DropDownList("Id", (IEnumerable<SelectListItem>)ViewBag.StaffLookup, new { @class = "form-control  form-select",  @id="staffId", @style = "width:100%" , data_control = "select2"})
                        </div>

                        <div class="col-md-3">
                            <label>Select Examiner Type</label>
                            <select class="form-control" id="reviewerType">
                                <option></option>
                                <option value="1">First Internal Examiner</option>
                                <option value="2">Second Internal Examiner</option>
                                <option value="3">Third Internal Examiner</option>
                                <option value="4">Fourth Internal Examiner</option>
                                <option value="5">First External Examiner</option>
                                <option value="6">Second External Examiner</option>
                            </select>
                        </div>

                        <div class="col-md-3">
                            <label>Choose Due Date</label>
                            <input class="form-control" type="date" id="due_date" placeholder="Due date" />
                        </div>

                        <div class="col-md-3">
                            <br>
                            <button type="submit" data-kt-contacts-type="submit" id="assign" class="btn btn-success btn-sm">
                                Assign
                            </button>
                        </div>
                    </div>
                
              
            </div>

          @*  <h3 class="card-title">
                <span class="card-label fw-bold text-gray-900">Submission #@Model.Id</span><br />
                <span class="text-gray-500 mt-1 fw-semibold fs-6" id="title">@Model.Title</span>
            </h3>*@

            <div class="card-body">
                <span class="card-label fw-bold text-gray-900">Abstract</span>
                <div id="kt_inbox_form_editor" class="bg-transparent border-0 h-350px px-3 ql-container ql-snow">
                    <div class="ql-editor ql-blank" id="output" data-gramm="false" contenteditable="true" data-placeholder="">
                        <p id="abstract">
                            @Model.Submission.Abstract
                        </p>
                    </div>
                    <div class="ql-clipboard" contenteditable="true" tabindex="-1"></div><div class="ql-tooltip ql-hidden">
                        <a class="ql-preview" rel="noopener noreferrer" target="_blank" href="about:blank"></a>
                        <input type="text" data-formula="e=mc^2" data-link="https://quilljs.com" data-video="Embed URL"><a class="ql-action"></a>
                        <a class="ql-remove"></a>
                    </div>
                </div>


            </div>
            <!--end::Card body-->
        </div>
        <!--end::Table Widget 5-->
        <br />

        @if (User.IsInRole(RolesModel.SPS))
        {
            <div class="card card-flush">

                <div class="card-header pt-7">
                    <h3>Examiner's Report</h3>

                </div>


                <div class="card-body">

                    @foreach (var item in Model.ThesisAssignments)
                    {
                        <div class="m-0">
                            <!--begin::Heading-->
                            <div class=" align-items-center collapsible py-3 toggle mb-0 collapsed" data-bs-toggle="collapse" data-bs-target="#kt_job_@item.Id" aria-expanded="false">
                                <!--begin::Icon-->
                                <div class="btn btn-sm btn-icon mw-20px btn-active-color-primary me-5">
                                    <i class="ki-duotone ki-minus-square toggle-on text-primary fs-1"><span class="path1"></span><span class="path2"></span></i>
                                    <i class="ki-duotone ki-plus-square toggle-off fs-1"><span class="path1"></span><span class="path2"></span><span class="path3"></span></i>
                                </div>
                                <!--end::Icon-->
                                <!--begin::Title-->
                                <div class="row text-gray-700 fw-bold">
                                    <div class="col-md-4">
                                        @item.ReviewerType
                                    </div>
                                    <div class="col-md-4">
                                        @item.Staff.Party.Name.FirstName @item.Staff.Party.Name.LastName
                                    </div>
                                    

                                </div>

                                <!--end::Title-->
                            </div>

                            <div id="kt_job_@item.Id" class="fs-6 ms-1 collapse" style="">
                                <div class="container">
                                    @if (@item.ExaminerReports.Count > 0)
                                    {
                                        
                                            <a href="/thesis/Report/@item.ExaminerReports.First().Path">Download Examiners Report</a>
                                                <br />
                                    }
                                    <table class="table table-striped table-bordered dt-responsive " width="100%" cellspacing="0">
                                        <tbody>
                                            @foreach (var grade in item.Grades)
                                            {
                                                <tr>
                                                    <td>@grade.GradeParam.Section</td>
                                                    <td>@grade.Marks</td>
                                                </tr>
                                            }
                                        </tbody>
                                </table>
                            </div>

                        </div>
                        <!--end::Content-->
                        <!--begin::Separator-->
                        <div class="separator separator-dashed"></div>
                        <!--end::Separator-->
                    </div>
                }

          


            </div>
            <!--end::Card body-->
        </div>

        }


    </div>
    <!--end::Col-->

    <div class="col-xl-4">

        <!--begin::List widget 5-->
        <div class="card card-flush h-xl-100">
            <!--begin::Header-->
            <div class="card-header pt-7">
                <!--begin::Title-->
                <h3 class="card-title align-items-start flex-column">
                    <span class="card-label fw-bold text-gray-900">Documents</span>
                </h3>

            </div>
            <!--end::Header-->
            <!--begin::Body-->
            <div class="card-body">
                <!--begin::Scroll-->
                <div class="hover-scroll-overlay-y pe-6 me-n6" style="height: 415px">




                    <div class="tree well">
                        <ul>
                            @if (Model.Submission.Documents != null)
                            {
                                @foreach (var document in Model.Submission.Documents)
                                {


                                    <li>
                                        @if(document.Name=="PrimaryFile" && Model.Submission.DecisionState == DecisionState.Approve)
                                        {
                                            <span><i class="icon-folder-open"></i> @document.Name </span> <a href="#" data-bs-toggle="modal" data-bs-target="#Add_File">Upload Revised File</a>
                                        }
                                        else
                                        {
                                            <span><i class="icon-folder-open"></i> @document.Name</span>
                                        }
                                        
                                        
                                        <ul>
                                            @if (document.Versions != null)
                                            {

                                                <li>
                                                    <a href="/thesis/FileUpload/@document.Versions.LastOrDefault().Path"> <span><img src="/thesis/assets/media/svg/files/pdf.svg" class="theme-light-show symbol symbol-60px mb-5" alt=""> @document.Versions.LastOrDefault().Name</span></a>

                                                </li>

                                            }


                                        </ul>
                                    </li>
                                }
                            }




                        </ul>
                    </div>




                </div>



                <hr />
                <br />


                <h3 class="card-title align-items-start flex-column">
                    <span class="card-label fw-bold text-gray-900">Submission History</span>
                </h3>
                <!--begin::Scroll-->
                <div class="hover-scroll-overlay-y pe-6 me-n6" style="height: 415px">

                    @foreach (var item in Model.Submission.SubmissionHistories)
                    {
                        <div class="d-flex align-items-center mb-6">
                            <!--begin::Bullet-->
                            <span data-kt-element="bullet" class="bullet bullet-vertical d-flex align-items-center min-h-70px mh-100 me-4 bg-success"></span>
                            <!--end::Bullet-->
                            <!--begin::Info-->
                            <div class="flex-grow-1 me-5">
                                <!--begin::Time-->
                                @* <div class="text-gray-800 fw-semibold fs-2">
                            10:20 - 11:00
                            <span class="text-gray-500 fw-semibold fs-7">
                            AM
                            </span>
                            </div>*@
                                <!--end::Time-->
                                <!--begin::Description-->
                                <div class="text-gray-700 fw-semibold fs-6">
                                    @item.Activity
                                </div>
                                <!--end::Description-->
                                <!--begin::Link-->
                                <div class="text-gray-500 fw-semibold fs-7">
                                    @item.ActivityDate.ToString("dddd, dd MMMM yyyy")
                                    <!--begin::Name-->
                                    @*<a href="#" class="text-primary opacity-75-hover fw-semibold">Peter Marcus</a>*@
                                    <!--end::Name-->
                                </div>
                                <!--end::Link-->
                            </div>
                            <!--end::Info-->
                            <!--begin::Action-->
                            @* <a href="#" class="btn btn-sm btn-light" data-bs-toggle="modal" data-bs-target="#kt_modal_create_project">View</a>*@
                            <!--end::Action-->
                        </div>
                    }




                </div>




                <!--end::Scroll-->
            </div>
            <!--end::Body-->
        </div>
        <!--end::List widget 5-->


    </div>
</div>



<style>
    .tree {
        min-height: 20px;
        padding: 19px;
        margin-bottom: 20px;
        background-color: #fbfbfb;
        border: 1px solid #999;
        -webkit-border-radius: 4px;
        -moz-border-radius: 4px;
        border-radius: 4px;
        -webkit-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05);
        -moz-box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05);
        box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.05)
    }

        .tree li {
            list-style-type: none;
            margin: 0;
            padding: 10px 5px 0 5px;
            position: relative
        }

            .tree li::before,
            .tree li::after {
                content: '';
                left: -20px;
                position: absolute;
                right: auto
            }

            .tree li::before {
                border-left: 1px solid #999;
                bottom: 50px;
                height: 100%;
                top: 0;
            }

            .tree li::after {
                box-sizing: border-box;
                border-left: 1px solid #999;
                border-bottom: 1px solid #999;
                border-bottom-left-radius: 10px;
                height: 25px;
                top: 0px;
                width: 25px;
            }

            .tree li span {
                -moz-border-radius: 5px;
                -webkit-border-radius: 5px;
                border: 1px solid #999;
                border-radius: 5px;
                display: inline-block;
                padding: 3px 8px;
                text-decoration: none;
            }

            .tree li.parent_li > span {
                cursor: pointer;
            }

        .tree > ul > li::before,
        .tree > ul > li::after {
            border: 0;
        }

        .tree li:last-child::before {
            height: 14px;
        }

        .tree li:not(.parent_li) span {
            position: relative;
        }

        .tree li span:before {
            content: "";
            position: absolute;
            /* border-width - 1px */
            left: -4px;
            bottom: calc(50% - 4px);
            border-color: transparent;
            border-left-color: #999;
            border-style: inherit;
            border-width: 4px;
        }

        /* another styles for parent_li immediate span children */
        .tree li.parent_li > span:before {
            bottom: initial;
            left: 2px;
            top: 20.5px;
        }

        /* hide arrow for immediate children */
        .tree > ul > li > span:before {
            display: none;
        }

        .tree li.parent_li > span:hover,
        .tree li.parent_li > span:hover + ul li span {
            background: #eee;
            border: 1px solid #94a0b4;
            color: #000;
        }
</style>



<script src="~/app/submission/managefile.js"></script>

<script>
    $(function () {


            $('.tree li:has(ul)').addClass('parent_li').find(' > span').attr('title', 'Collapse this branch');
            $('.tree li.parent_li > span').on('click', function (e) {
                var children = $(this).parent('li.parent_li').find(' > ul > li');
                if (children.is(":visible")) {
                    children.hide('fast');
                    $(this).attr('title', 'Expand this branch').find(' > i').addClass('icon-plus-sign').removeClass('icon-minus-sign');
                } else {
                    children.show('fast');
                    $(this).attr('title', 'Collapse this branch').find(' > i').addClass('icon-minus-sign').removeClass('icon-plus-sign');
                }
                e.stopPropagation();
            });









        $('#decide').change(function () {

            var value = $('#decide').val();
            if(value==="1" || value==="2")
            {
              $('#btnApply').removeAttr('hidden');
                $('#subsec').attr('hidden', true);
            }
           
            if (value === "Re-assign") {
                $('#subsec').removeAttr('hidden');
                $('#btnApply').attr('hidden',true);
            }
            
        });


        $('#btnPublish').click(function () {
            var submissionId = $('#submissionId').val();


            $.ajax({
                url: $('#base_url').text() + '/Submission/Publish',
                type: 'post',
                data: {
                    id: submissionId
                    
                },
                success: function (response) {

                    if (response) {

                        swal({
                            title: "success",
                            icon: "success",
                            text: "Published Successfully",
                            type: "Publish"
                        }).then(function () {
                            window.location.reload();
                        });

                    } else {
                        var errorMessage = response.message;
                        if (!errorMessage)
                            errorMessage = response.detailedMessage;

                        showNotificationMessage("Error", errorMessage, "error");
                    }
                },
                complete: function () {

                },
                error: errorResponse
            });


        });

        $('#btnLibrary').click(function () {
            var id = $('#submissionId').val();
            


            $.ajax({
                url: $('#base_url').text() + '/Submission/SubmitToLibrary',
                type: 'post',
                data: {
                    id: id
                    
                },
                success: function (response) {

                    if (response) {

                        swal({
                            title: "success",
                            icon: "success",
                            text: "Successful",
                            type: "Sent to Library"
                        }).then(function () {
                            window.location.reload();
                        });

                    } else {
                        var errorMessage = response.message;
                        if (!errorMessage)
                            errorMessage = response.detailedMessage;

                        showNotificationMessage("Error", errorMessage, "error");
                    }
                },
                complete: function () {

                },
                error: errorResponse
            });


        });


        $('#btnApply').click(function () {
            var decision = $('#decide').val();
            var submissionId = $('#submissionId').val();
            

            $.ajax({
                url: $('#base_url').text() + '/Submission/SubmissionDecision',
                type: 'post',
                data: {
                id: submissionId,
                decision: decision
                },
                success: function (response) {

                    if (response) {

                        swal({
                            title: "success",
                            icon: "success",
                            text: "Successful",
                            type: "Decision Made"
                        }).then(function () {
                            window.location.reload();
                        });

                    } else {
                        var errorMessage = response.message;
                        if (!errorMessage)
                            errorMessage = response.detailedMessage;

                        showNotificationMessage("Error", errorMessage, "error");
                    }
                },
                complete: function () {

                },
                error: errorResponse
            });

            
        });




        $('#assign').click(function () {

            var data = {

                'submissionId': @Model.Submission.Id,
                'staffId': $('#staffId').val(),
                'reviewerType': $('#reviewerType').val(),
                'deadline': $('#due_date').val()
            };

            console.log(data)

            Swal.fire({
                text: 'Are you sure you want to Assign report to this Reviewer?',
                icon: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes',
                confirmButtonColor: '#3085d6',
                cancelButtonColor: '#ff726f',
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: "POST",
                        data: data,
                        url: $('#base_url').text() + '/ThesisAssignment/AssignThesis',
                        success: function (response) {

                            if (response.isComplete) {
                                swal({
                                    title: "Success",
                                    icon: "success",
                                    text: response.message,
                                    type: "success"
                                }).then(function () {

                                });

                            } else {
                                var errorMessage = response.message;
                                if (!errorMessage)
                                    errorMessage = response.detailedMessage;

                                showNotificationMessage("Error", errorMessage, "error");
                            }
                        },
                        error: function (response) {


                        },
                    });
                }
                return false;
            })



        });
    
    
    
    
    
    
    
    });
</script>